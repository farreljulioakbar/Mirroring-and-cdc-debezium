version: '3.8'

services:
  zookeeper:
    image: quay.io/debezium/zookeeper:2.6
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    image: quay.io/debezium/kafka:2.6
    ports:
      - "9092:9092"
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: quay.io/debezium/example-postgres:2.6
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory

  target-postgres:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    container_name: tutorial-connect-1
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: my_connect_configs
      CONNECT_OFFSET_STORAGE_TOPIC: my_connect_offsets
      CONNECT_STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"

      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "true"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "true"

      CONNECT_PLUGIN_PATH: "/etc/kafka-connect/plugins"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"

    volumes:
      - ./plugins:/etc/kafka-connect/plugins

  # Optional: CLI container for debugging Kafka
  kafka-tools:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-tools
    depends_on:
      - kafka
    entrypoint: tail -f /dev/null

  # Optional: Web UI for Kafka topic monitoring
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: tutorial-kafdrop-1
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
